{
  "version": "1.17.0",
  "release": "1.17",
  "apiGroups": [
    {
      "name": "",
      "preferredVersion": "v1",
      "apiVersions": [
        {
          "version": "v1",
          "resources": [
            {
              "kind": "ComponentStatus",
              "namespaced": false,
              "singular": "componentstatus",
              "plural": "componentstatuses",
              "description": "ComponentStatus (and ComponentStatusList) holds the cluster validation info."
            },
            {
              "kind": "ConfigMap",
              "namespaced": true,
              "singular": "configmap",
              "plural": "configmaps",
              "description": "ConfigMap holds configuration data for pods to consume."
            },
            {
              "kind": "Endpoints",
              "namespaced": true,
              "singular": "endpoints",
              "plural": "endpoints",
              "description": "Endpoints is a collection of endpoints that implement the actual service. Example:\n  Name: \"mysvc\",\n  Subsets: [\n    {\n      Addresses: [{\"ip\": \"10.10.1.1\"}, {\"ip\": \"10.10.2.2\"}],\n      Ports: [{\"name\": \"a\", \"port\": 8675}, {\"name\": \"b\", \"port\": 309}]\n    },\n    {\n      Addresses: [{\"ip\": \"10.10.3.3\"}],\n      Ports: [{\"name\": \"a\", \"port\": 93}, {\"name\": \"b\", \"port\": 76}]\n    },\n ]"
            },
            {
              "kind": "Event",
              "namespaced": true,
              "singular": "event",
              "plural": "events",
              "description": "Event is a report of an event somewhere in the cluster."
            },
            {
              "kind": "LimitRange",
              "namespaced": true,
              "singular": "limitrange",
              "plural": "limitranges",
              "description": "LimitRange sets resource usage limits for each kind of resource in a Namespace."
            },
            {
              "kind": "Namespace",
              "namespaced": false,
              "singular": "namespace",
              "plural": "namespaces",
              "description": "Namespace provides a scope for Names. Use of multiple namespaces is optional."
            },
            {
              "kind": "Node",
              "namespaced": false,
              "singular": "node",
              "plural": "nodes",
              "description": "Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache (i.e. in etcd)."
            },
            {
              "kind": "PersistentVolume",
              "namespaced": false,
              "singular": "persistentvolume",
              "plural": "persistentvolumes",
              "description": "PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes"
            },
            {
              "kind": "PersistentVolumeClaim",
              "namespaced": true,
              "singular": "persistentvolumeclaim",
              "plural": "persistentvolumeclaims",
              "description": "PersistentVolumeClaim is a user's request for and claim to a persistent volume"
            },
            {
              "kind": "Pod",
              "namespaced": true,
              "singular": "pod",
              "plural": "pods",
              "description": "Pod is a collection of containers that can run on a host. This resource is created by clients and scheduled onto hosts."
            },
            {
              "kind": "PodTemplate",
              "namespaced": true,
              "singular": "podtemplate",
              "plural": "podtemplates",
              "description": "PodTemplate describes a template for creating copies of a predefined pod."
            },
            {
              "kind": "ReplicationController",
              "namespaced": true,
              "singular": "replicationcontroller",
              "plural": "replicationcontrollers",
              "description": "ReplicationController represents the configuration of a replication controller."
            },
            {
              "kind": "ResourceQuota",
              "namespaced": true,
              "singular": "resourcequota",
              "plural": "resourcequotas",
              "description": "ResourceQuota sets aggregate quota restrictions enforced per namespace"
            },
            {
              "kind": "Secret",
              "namespaced": true,
              "singular": "secret",
              "plural": "secrets",
              "description": "Secret holds secret data of a certain type. The total bytes of the values in the Data field must be less than MaxSecretSize bytes."
            },
            {
              "kind": "Service",
              "namespaced": true,
              "singular": "service",
              "plural": "services",
              "description": "Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy."
            },
            {
              "kind": "ServiceAccount",
              "namespaced": true,
              "singular": "serviceaccount",
              "plural": "serviceaccounts",
              "description": "ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets"
            }
          ]
        }
      ]
    },
    {
      "name": "admissionregistration.k8s.io",
      "preferredVersion": "v1",
      "apiVersions": [
        {
          "version": "v1",
          "resources": [
            {
              "kind": "MutatingWebhookConfiguration",
              "namespaced": false,
              "singular": "mutatingwebhookconfiguration",
              "plural": "mutatingwebhookconfigurations",
              "description": "MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object."
            },
            {
              "kind": "ValidatingWebhookConfiguration",
              "namespaced": false,
              "singular": "validatingwebhookconfiguration",
              "plural": "validatingwebhookconfigurations",
              "description": "ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it."
            }
          ]
        },
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "MutatingWebhookConfiguration",
              "namespaced": false,
              "singular": "mutatingwebhookconfiguration",
              "plural": "mutatingwebhookconfigurations",
              "description": "MutatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and may change the object. Deprecated in v1.16, planned for removal in v1.19. Use admissionregistration.k8s.io/v1 MutatingWebhookConfiguration instead."
            },
            {
              "kind": "ValidatingWebhookConfiguration",
              "namespaced": false,
              "singular": "validatingwebhookconfiguration",
              "plural": "validatingwebhookconfigurations",
              "description": "ValidatingWebhookConfiguration describes the configuration of and admission webhook that accept or reject and object without changing it. Deprecated in v1.16, planned for removal in v1.19. Use admissionregistration.k8s.io/v1 ValidatingWebhookConfiguration instead."
            }
          ]
        }
      ]
    },
    {
      "name": "apiextensions.k8s.io",
      "preferredVersion": "v1",
      "apiVersions": [
        {
          "version": "v1",
          "resources": [
            {
              "kind": "CustomResourceDefinition",
              "namespaced": false,
              "singular": "customresourcedefinition",
              "plural": "customresourcedefinitions",
              "description": "CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format \u003c.spec.name\u003e.\u003c.spec.group\u003e."
            }
          ]
        },
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "CustomResourceDefinition",
              "namespaced": false,
              "singular": "customresourcedefinition",
              "plural": "customresourcedefinitions",
              "description": "CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format \u003c.spec.name\u003e.\u003c.spec.group\u003e. Deprecated in v1.16, planned for removal in v1.19. Use apiextensions.k8s.io/v1 CustomResourceDefinition instead."
            }
          ]
        }
      ]
    },
    {
      "name": "apiregistration.k8s.io",
      "preferredVersion": "v1",
      "apiVersions": [
        {
          "version": "v1",
          "resources": [
            {
              "kind": "APIService",
              "namespaced": false,
              "singular": "apiservice",
              "plural": "apiservices",
              "description": "APIService represents a server for a particular GroupVersion. Name must be \"version.group\"."
            }
          ]
        },
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "APIService",
              "namespaced": false,
              "singular": "apiservice",
              "plural": "apiservices",
              "description": "APIService represents a server for a particular GroupVersion. Name must be \"version.group\"."
            }
          ]
        }
      ]
    },
    {
      "name": "apps",
      "preferredVersion": "v1",
      "apiVersions": [
        {
          "version": "v1",
          "resources": [
            {
              "kind": "ControllerRevision",
              "namespaced": true,
              "singular": "controllerrevision",
              "plural": "controllerrevisions",
              "description": "ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers."
            },
            {
              "kind": "DaemonSet",
              "namespaced": true,
              "singular": "daemonset",
              "plural": "daemonsets",
              "description": "DaemonSet represents the configuration of a daemon set."
            },
            {
              "kind": "Deployment",
              "namespaced": true,
              "singular": "deployment",
              "plural": "deployments",
              "description": "Deployment enables declarative updates for Pods and ReplicaSets."
            },
            {
              "kind": "ReplicaSet",
              "namespaced": true,
              "singular": "replicaset",
              "plural": "replicasets",
              "description": "ReplicaSet ensures that a specified number of pod replicas are running at any given time."
            },
            {
              "kind": "StatefulSet",
              "namespaced": true,
              "singular": "statefulset",
              "plural": "statefulsets",
              "description": "StatefulSet represents a set of pods with consistent identities. Identities are defined as:\n - Network: A single stable DNS and hostname.\n - Storage: As many VolumeClaims as requested.\nThe StatefulSet guarantees that a given network identity will always map to the same storage identity."
            }
          ]
        },
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "ControllerRevision",
              "namespaced": true,
              "singular": "controllerrevision",
              "plural": "controllerrevisions",
              "description": "DEPRECATED - This group version of ControllerRevision is deprecated by apps/v1beta2/ControllerRevision. See the release notes for more information. ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers."
            },
            {
              "kind": "Deployment",
              "namespaced": true,
              "singular": "deployment",
              "plural": "deployments",
              "description": "DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets."
            },
            {
              "kind": "StatefulSet",
              "namespaced": true,
              "singular": "statefulset",
              "plural": "statefulsets",
              "description": "DEPRECATED - This group version of StatefulSet is deprecated by apps/v1beta2/StatefulSet. See the release notes for more information. StatefulSet represents a set of pods with consistent identities. Identities are defined as:\n - Network: A single stable DNS and hostname.\n - Storage: As many VolumeClaims as requested.\nThe StatefulSet guarantees that a given network identity will always map to the same storage identity."
            }
          ]
        },
        {
          "version": "v1beta2",
          "resources": [
            {
              "kind": "ControllerRevision",
              "namespaced": true,
              "singular": "controllerrevision",
              "plural": "controllerrevisions",
              "description": "DEPRECATED - This group version of ControllerRevision is deprecated by apps/v1/ControllerRevision. See the release notes for more information. ControllerRevision implements an immutable snapshot of state data. Clients are responsible for serializing and deserializing the objects that contain their internal state. Once a ControllerRevision has been successfully created, it can not be updated. The API Server will fail validation of all requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and rollback, this object is beta. However, it may be subject to name and representation changes in future releases, and clients should not depend on its stability. It is primarily for internal use by controllers."
            },
            {
              "kind": "DaemonSet",
              "namespaced": true,
              "singular": "daemonset",
              "plural": "daemonsets",
              "description": "DEPRECATED - This group version of DaemonSet is deprecated by apps/v1/DaemonSet. See the release notes for more information. DaemonSet represents the configuration of a daemon set."
            },
            {
              "kind": "Deployment",
              "namespaced": true,
              "singular": "deployment",
              "plural": "deployments",
              "description": "DEPRECATED - This group version of Deployment is deprecated by apps/v1/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets."
            },
            {
              "kind": "ReplicaSet",
              "namespaced": true,
              "singular": "replicaset",
              "plural": "replicasets",
              "description": "DEPRECATED - This group version of ReplicaSet is deprecated by apps/v1/ReplicaSet. See the release notes for more information. ReplicaSet ensures that a specified number of pod replicas are running at any given time."
            },
            {
              "kind": "StatefulSet",
              "namespaced": true,
              "singular": "statefulset",
              "plural": "statefulsets",
              "description": "DEPRECATED - This group version of StatefulSet is deprecated by apps/v1/StatefulSet. See the release notes for more information. StatefulSet represents a set of pods with consistent identities. Identities are defined as:\n - Network: A single stable DNS and hostname.\n - Storage: As many VolumeClaims as requested.\nThe StatefulSet guarantees that a given network identity will always map to the same storage identity."
            }
          ]
        }
      ]
    },
    {
      "name": "auditregistration.k8s.io",
      "preferredVersion": "v1alpha1",
      "apiVersions": [
        {
          "version": "v1alpha1",
          "resources": [
            {
              "kind": "AuditSink",
              "namespaced": false,
              "singular": "auditsink",
              "plural": "auditsinks",
              "description": "AuditSink represents a cluster level audit sink"
            }
          ]
        }
      ]
    },
    {
      "name": "authentication.k8s.io",
      "preferredVersion": "v1",
      "apiVersions": [
        {
          "version": "v1",
          "resources": [
            {
              "kind": "TokenReview",
              "namespaced": false,
              "singular": "tokenreview",
              "plural": "tokenreviews",
              "description": "TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver."
            }
          ]
        },
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "TokenReview",
              "namespaced": false,
              "singular": "tokenreview",
              "plural": "tokenreviews",
              "description": "TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may be cached by the webhook token authenticator plugin in the kube-apiserver."
            }
          ]
        }
      ]
    },
    {
      "name": "authorization.k8s.io",
      "preferredVersion": "v1",
      "apiVersions": [
        {
          "version": "v1",
          "resources": [
            {
              "kind": "SelfSubjectAccessReview",
              "namespaced": false,
              "singular": "selfsubjectaccessreview",
              "plural": "selfsubjectaccessreviews",
              "description": "SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action"
            },
            {
              "kind": "SelfSubjectRulesReview",
              "namespaced": false,
              "singular": "selfsubjectrulesreview",
              "plural": "selfsubjectrulesreviews",
              "description": "SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server."
            },
            {
              "kind": "SubjectAccessReview",
              "namespaced": false,
              "singular": "subjectaccessreview",
              "plural": "subjectaccessreviews",
              "description": "SubjectAccessReview checks whether or not a user or group can perform an action."
            }
          ]
        },
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "SelfSubjectAccessReview",
              "namespaced": false,
              "singular": "selfsubjectaccessreview",
              "plural": "selfsubjectaccessreviews",
              "description": "SelfSubjectAccessReview checks whether or the current user can perform an action.  Not filling in a spec.namespace means \"in all namespaces\".  Self is a special case, because users should always be able to check whether they can perform an action"
            },
            {
              "kind": "SelfSubjectRulesReview",
              "namespaced": false,
              "singular": "selfsubjectrulesreview",
              "plural": "selfsubjectrulesreviews",
              "description": "SelfSubjectRulesReview enumerates the set of actions the current user can perform within a namespace. The returned list of actions may be incomplete depending on the server's authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview should be used by UIs to show/hide actions, or to quickly let an end user reason about their permissions. It should NOT Be used by external systems to drive authorization decisions as this raises confused deputy, cache lifetime/revocation, and correctness concerns. SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization decisions to the API server."
            },
            {
              "kind": "SubjectAccessReview",
              "namespaced": false,
              "singular": "subjectaccessreview",
              "plural": "subjectaccessreviews",
              "description": "SubjectAccessReview checks whether or not a user or group can perform an action."
            }
          ]
        }
      ]
    },
    {
      "name": "autoscaling",
      "preferredVersion": "v1",
      "apiVersions": [
        {
          "version": "v1",
          "resources": [
            {
              "kind": "HorizontalPodAutoscaler",
              "namespaced": true,
              "singular": "horizontalpodautoscaler",
              "plural": "horizontalpodautoscalers",
              "description": "configuration of a horizontal pod autoscaler."
            }
          ]
        },
        {
          "version": "v2beta1",
          "resources": [
            {
              "kind": "HorizontalPodAutoscaler",
              "namespaced": true,
              "singular": "horizontalpodautoscaler",
              "plural": "horizontalpodautoscalers",
              "description": "HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified."
            }
          ]
        },
        {
          "version": "v2beta2",
          "resources": [
            {
              "kind": "HorizontalPodAutoscaler",
              "namespaced": true,
              "singular": "horizontalpodautoscaler",
              "plural": "horizontalpodautoscalers",
              "description": "HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which automatically manages the replica count of any resource implementing the scale subresource based on the metrics specified."
            }
          ]
        }
      ]
    },
    {
      "name": "batch",
      "preferredVersion": "v1",
      "apiVersions": [
        {
          "version": "v1",
          "resources": [
            {
              "kind": "Job",
              "namespaced": true,
              "singular": "job",
              "plural": "jobs",
              "description": "Job represents the configuration of a single job."
            }
          ]
        },
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "CronJob",
              "namespaced": true,
              "singular": "cronjob",
              "plural": "cronjobs",
              "description": "CronJob represents the configuration of a single cron job."
            }
          ]
        },
        {
          "version": "v2alpha1",
          "resources": [
            {
              "kind": "CronJob",
              "namespaced": true,
              "singular": "cronjob",
              "plural": "cronjobs",
              "description": "CronJob represents the configuration of a single cron job."
            }
          ]
        }
      ]
    },
    {
      "name": "certificates.k8s.io",
      "preferredVersion": "v1beta1",
      "apiVersions": [
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "CertificateSigningRequest",
              "namespaced": false,
              "singular": "certificatesigningrequest",
              "plural": "certificatesigningrequests",
              "description": "Describes a certificate signing request"
            }
          ]
        }
      ]
    },
    {
      "name": "coordination.k8s.io",
      "preferredVersion": "v1",
      "apiVersions": [
        {
          "version": "v1",
          "resources": [
            {
              "kind": "Lease",
              "namespaced": true,
              "singular": "lease",
              "plural": "leases",
              "description": "Lease defines a lease concept."
            }
          ]
        },
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "Lease",
              "namespaced": true,
              "singular": "lease",
              "plural": "leases",
              "description": "Lease defines a lease concept."
            }
          ]
        }
      ]
    },
    {
      "name": "discovery.k8s.io",
      "preferredVersion": "v1beta1",
      "apiVersions": [
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "EndpointSlice",
              "namespaced": true,
              "singular": "endpointslice",
              "plural": "endpointslices",
              "description": "EndpointSlice represents a subset of the endpoints that implement a service. For a given service there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce the full set of endpoints."
            }
          ]
        }
      ]
    },
    {
      "name": "events.k8s.io",
      "preferredVersion": "v1beta1",
      "apiVersions": [
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "Event",
              "namespaced": true,
              "singular": "event",
              "plural": "events",
              "description": "Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system."
            }
          ]
        }
      ]
    },
    {
      "name": "extensions",
      "preferredVersion": "v1beta1",
      "apiVersions": [
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "DaemonSet",
              "namespaced": true,
              "singular": "daemonset",
              "plural": "daemonsets",
              "description": "DEPRECATED - This group version of DaemonSet is deprecated by apps/v1beta2/DaemonSet. See the release notes for more information. DaemonSet represents the configuration of a daemon set."
            },
            {
              "kind": "Deployment",
              "namespaced": true,
              "singular": "deployment",
              "plural": "deployments",
              "description": "DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See the release notes for more information. Deployment enables declarative updates for Pods and ReplicaSets."
            },
            {
              "kind": "Ingress",
              "namespaced": true,
              "singular": "ingress",
              "plural": "ingresses",
              "description": "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc. DEPRECATED - This group version of Ingress is deprecated by networking.k8s.io/v1beta1 Ingress. See the release notes for more information."
            },
            {
              "kind": "NetworkPolicy",
              "namespaced": true,
              "singular": "networkpolicy",
              "plural": "networkpolicies",
              "description": "DEPRECATED 1.9 - This group version of NetworkPolicy is deprecated by networking/v1/NetworkPolicy. NetworkPolicy describes what network traffic is allowed for a set of Pods"
            },
            {
              "kind": "PodSecurityPolicy",
              "namespaced": false,
              "singular": "podsecuritypolicy",
              "plural": "podsecuritypolicies",
              "description": "PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container. Deprecated: use PodSecurityPolicy from policy API Group instead."
            },
            {
              "kind": "ReplicaSet",
              "namespaced": true,
              "singular": "replicaset",
              "plural": "replicasets",
              "description": "DEPRECATED - This group version of ReplicaSet is deprecated by apps/v1beta2/ReplicaSet. See the release notes for more information. ReplicaSet ensures that a specified number of pod replicas are running at any given time."
            }
          ]
        }
      ]
    },
    {
      "name": "flowcontrol.apiserver.k8s.io",
      "preferredVersion": "v1alpha1",
      "apiVersions": [
        {
          "version": "v1alpha1",
          "resources": [
            {
              "kind": "FlowSchema",
              "namespaced": false,
              "singular": "flowschema",
              "plural": "flowschemas",
              "description": "FlowSchema defines the schema of a group of flows. Note that a flow is made up of a set of inbound API requests with similar attributes and is identified by a pair of strings: the name of the FlowSchema and a \"flow distinguisher\"."
            },
            {
              "kind": "PriorityLevelConfiguration",
              "namespaced": false,
              "singular": "prioritylevelconfiguration",
              "plural": "prioritylevelconfigurations",
              "description": "PriorityLevelConfiguration represents the configuration of a priority level."
            }
          ]
        }
      ]
    },
    {
      "name": "networking.k8s.io",
      "preferredVersion": "v1",
      "apiVersions": [
        {
          "version": "v1",
          "resources": [
            {
              "kind": "NetworkPolicy",
              "namespaced": true,
              "singular": "networkpolicy",
              "plural": "networkpolicies",
              "description": "NetworkPolicy describes what network traffic is allowed for a set of Pods"
            }
          ]
        },
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "Ingress",
              "namespaced": true,
              "singular": "ingress",
              "plural": "ingresses",
              "description": "Ingress is a collection of rules that allow inbound connections to reach the endpoints defined by a backend. An Ingress can be configured to give services externally-reachable urls, load balance traffic, terminate SSL, offer name based virtual hosting etc."
            }
          ]
        }
      ]
    },
    {
      "name": "node.k8s.io",
      "preferredVersion": "v1beta1",
      "apiVersions": [
        {
          "version": "v1alpha1",
          "resources": [
            {
              "kind": "RuntimeClass",
              "namespaced": false,
              "singular": "runtimeclass",
              "plural": "runtimeclasses",
              "description": "RuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are (currently) manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md"
            }
          ]
        },
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "RuntimeClass",
              "namespaced": false,
              "singular": "runtimeclass",
              "plural": "runtimeclasses",
              "description": "RuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass is used to determine which container runtime is used to run all containers in a pod. RuntimeClasses are (currently) manually defined by a user or cluster provisioner, and referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running the pod.  For more details, see https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md"
            }
          ]
        }
      ]
    },
    {
      "name": "policy",
      "preferredVersion": "v1beta1",
      "apiVersions": [
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "PodDisruptionBudget",
              "namespaced": true,
              "singular": "poddisruptionbudget",
              "plural": "poddisruptionbudgets",
              "description": "PodDisruptionBudget is an object to define the max disruption that can be caused to a collection of pods"
            },
            {
              "kind": "PodSecurityPolicy",
              "namespaced": false,
              "singular": "podsecuritypolicy",
              "plural": "podsecuritypolicies",
              "description": "PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container."
            }
          ]
        }
      ]
    },
    {
      "name": "rbac.authorization.k8s.io",
      "preferredVersion": "v1",
      "apiVersions": [
        {
          "version": "v1",
          "resources": [
            {
              "kind": "ClusterRole",
              "namespaced": false,
              "singular": "clusterrole",
              "plural": "clusterroles",
              "description": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding."
            },
            {
              "kind": "ClusterRoleBinding",
              "namespaced": false,
              "singular": "clusterrolebinding",
              "plural": "clusterrolebindings",
              "description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject."
            },
            {
              "kind": "Role",
              "namespaced": true,
              "singular": "role",
              "plural": "roles",
              "description": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding."
            },
            {
              "kind": "RoleBinding",
              "namespaced": true,
              "singular": "rolebinding",
              "plural": "rolebindings",
              "description": "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace."
            }
          ]
        },
        {
          "version": "v1alpha1",
          "resources": [
            {
              "kind": "ClusterRole",
              "namespaced": false,
              "singular": "clusterrole",
              "plural": "clusterroles",
              "description": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 ClusterRole, and will no longer be served in v1.20."
            },
            {
              "kind": "ClusterRoleBinding",
              "namespaced": false,
              "singular": "clusterrolebinding",
              "plural": "clusterrolebindings",
              "description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 ClusterRoleBinding, and will no longer be served in v1.20."
            },
            {
              "kind": "Role",
              "namespaced": true,
              "singular": "role",
              "plural": "roles",
              "description": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 Role, and will no longer be served in v1.20."
            },
            {
              "kind": "RoleBinding",
              "namespaced": true,
              "singular": "rolebinding",
              "plural": "rolebindings",
              "description": "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 RoleBinding, and will no longer be served in v1.20."
            }
          ]
        },
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "ClusterRole",
              "namespaced": false,
              "singular": "clusterrole",
              "plural": "clusterroles",
              "description": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 ClusterRole, and will no longer be served in v1.20."
            },
            {
              "kind": "ClusterRoleBinding",
              "namespaced": false,
              "singular": "clusterrolebinding",
              "plural": "clusterrolebindings",
              "description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace, and adds who information via Subject. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 ClusterRoleBinding, and will no longer be served in v1.20."
            },
            {
              "kind": "Role",
              "namespaced": true,
              "singular": "role",
              "plural": "roles",
              "description": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 Role, and will no longer be served in v1.20."
            },
            {
              "kind": "RoleBinding",
              "namespaced": true,
              "singular": "rolebinding",
              "plural": "rolebindings",
              "description": "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace. It adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given namespace only have effect in that namespace. Deprecated in v1.17 in favor of rbac.authorization.k8s.io/v1 RoleBinding, and will no longer be served in v1.20."
            }
          ]
        }
      ]
    },
    {
      "name": "scheduling.k8s.io",
      "preferredVersion": "v1",
      "apiVersions": [
        {
          "version": "v1",
          "resources": [
            {
              "kind": "PriorityClass",
              "namespaced": false,
              "singular": "priorityclass",
              "plural": "priorityclasses",
              "description": "PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer."
            }
          ]
        },
        {
          "version": "v1alpha1",
          "resources": [
            {
              "kind": "PriorityClass",
              "namespaced": false,
              "singular": "priorityclass",
              "plural": "priorityclasses",
              "description": "DEPRECATED - This group version of PriorityClass is deprecated by scheduling.k8s.io/v1/PriorityClass. PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer."
            }
          ]
        },
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "PriorityClass",
              "namespaced": false,
              "singular": "priorityclass",
              "plural": "priorityclasses",
              "description": "DEPRECATED - This group version of PriorityClass is deprecated by scheduling.k8s.io/v1/PriorityClass. PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer."
            }
          ]
        }
      ]
    },
    {
      "name": "settings.k8s.io",
      "preferredVersion": "v1alpha1",
      "apiVersions": [
        {
          "version": "v1alpha1",
          "resources": [
            {
              "kind": "PodPreset",
              "namespaced": true,
              "singular": "podpreset",
              "plural": "podpresets",
              "description": "PodPreset is a policy resource that defines additional runtime requirements for a Pod."
            }
          ]
        }
      ]
    },
    {
      "name": "storage.k8s.io",
      "preferredVersion": "v1",
      "apiVersions": [
        {
          "version": "v1",
          "resources": [
            {
              "kind": "CSINode",
              "namespaced": false,
              "singular": "csinode",
              "plural": "csinodes",
              "description": "CSINode holds information about all CSI drivers installed on a node. CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object."
            },
            {
              "kind": "StorageClass",
              "namespaced": false,
              "singular": "storageclass",
              "plural": "storageclasses",
              "description": "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.\n\nStorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name."
            },
            {
              "kind": "VolumeAttachment",
              "namespaced": false,
              "singular": "volumeattachment",
              "plural": "volumeattachments",
              "description": "VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.\n\nVolumeAttachment objects are non-namespaced."
            }
          ]
        },
        {
          "version": "v1alpha1",
          "resources": [
            {
              "kind": "VolumeAttachment",
              "namespaced": false,
              "singular": "volumeattachment",
              "plural": "volumeattachments",
              "description": "VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.\n\nVolumeAttachment objects are non-namespaced."
            }
          ]
        },
        {
          "version": "v1beta1",
          "resources": [
            {
              "kind": "CSIDriver",
              "namespaced": false,
              "singular": "csidriver",
              "plural": "csidrivers",
              "description": "CSIDriver captures information about a Container Storage Interface (CSI) volume driver deployed on the cluster. CSI drivers do not need to create the CSIDriver object directly. Instead they may use the cluster-driver-registrar sidecar container. When deployed with a CSI driver it automatically creates a CSIDriver object representing the driver. Kubernetes attach detach controller uses this object to determine whether attach is required. Kubelet uses this object to determine whether pod information needs to be passed on mount. CSIDriver objects are non-namespaced."
            },
            {
              "kind": "CSINode",
              "namespaced": false,
              "singular": "csinode",
              "plural": "csinodes",
              "description": "DEPRECATED - This group version of CSINode is deprecated by storage/v1/CSINode. See the release notes for more information. CSINode holds information about all CSI drivers installed on a node. CSI drivers do not need to create the CSINode object directly. As long as they use the node-driver-registrar sidecar container, the kubelet will automatically populate the CSINode object for the CSI driver as part of kubelet plugin registration. CSINode has the same name as a node. If the object is missing, it means either there are no CSI Drivers available on the node, or the Kubelet version is low enough that it doesn't create this object. CSINode has an OwnerReference that points to the corresponding node object."
            },
            {
              "kind": "StorageClass",
              "namespaced": false,
              "singular": "storageclass",
              "plural": "storageclasses",
              "description": "StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.\n\nStorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name."
            },
            {
              "kind": "VolumeAttachment",
              "namespaced": false,
              "singular": "volumeattachment",
              "plural": "volumeattachments",
              "description": "VolumeAttachment captures the intent to attach or detach the specified volume to/from the specified node.\n\nVolumeAttachment objects are non-namespaced."
            }
          ]
        }
      ]
    }
  ]
}
